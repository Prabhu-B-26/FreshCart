{
  "entities": {
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a grocery product available in the store.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "quantity": {
          "type": "number",
          "description": "Available quantity of the product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product image.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "name",
        "price",
        "quantity",
        "imageUrl"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the GrocerEase application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "fullName": {
          "type": "string",
          "description": "Full name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the user has administrator privileges."
        }
      },
      "required": [
        "id",
        "fullName",
        "email"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date and time when the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "items": {
          "type": "array",
          "description": "List of items in the order.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "orderDate",
        "totalAmount",
        "items"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents a single item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order item."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product in the order item."
        },
        "price": {
          "type": "number",
          "description": "Price of the product in the order item."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "price"
      ]
    },
    "CartItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CartItem",
      "type": "object",
      "description": "Represents an item in the user's shopping cart.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the cart item."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N CartItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N CartItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product in the cart."
        }
      },
      "required": [
        "id",
        "userId",
        "productId",
        "quantity"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Includes denormalized 'isAdmin' field for role-based access control.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores product information for the grocery store.",
          "params": [
            {
              "name": "productId",
              "description": "The unique identifier for the product."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/cart_items/{cartItemId}",
        "definition": {
          "entityName": "CartItem",
          "schema": {
            "$ref": "#/backend/entities/CartItem"
          },
          "description": "Stores items in the user's shopping cart. Path-based ownership ensures only the user can access their cart items.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "cartItemId",
              "description": "The unique identifier for the cart item."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Stores order information for each user. Path-based ownership ensures only the user can access their order history.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "orderId",
              "description": "The unique identifier for the order."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/orders/{orderId}/order_items/{orderItemId}",
        "definition": {
          "entityName": "OrderItem",
          "schema": {
            "$ref": "#/backend/entities/OrderItem"
          },
          "description": "Stores individual order items within an order. Inherits ownership from the parent order document.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "orderId",
              "description": "The unique identifier for the order."
            },
            {
              "name": "orderItemId",
              "description": "The unique identifier for the order item."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "admin_role",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Indicates admin privileges for a user. Existence of the document grants admin rights.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support the GrocerEase application, focusing on user authentication, product management, shopping cart functionality, order processing, and receipt generation. Key design principles include Authorization Independence, Clarity of Intent, and Structural Segregation. User data is stored under `/users/{userId}`, ensuring clear ownership. Products are stored in a flat `/products` collection for easy listing and searching. Cart items and orders are organized as subcollections under each user (`/users/{userId}/cart_items` and `/users/{userId}/orders`) to maintain a strong user-entity relationship. The admin role is managed through the `/roles_admin/{userId}` collection. This structure supports the QAPs requirement for secure list operations and enforces invariants for ownership and data integrity. Denormalization isn't explicitly used here because the relationships are straightforward and path-based, except for admin roles. For scalability, consider adding indexing for frequent queries, especially on the `products` collection for search functionality."
  }
}